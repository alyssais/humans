#!/bin/sh

# Exit script on errors
set -ue

# Read arguments
show_help=
for arg in "$@"; do
  case "$arg" in
   "-h"|--help)
      show_help=stdin
      ;;
    *)
      >&2 echo "Unrecognized argument: $arg"
      show_help=stderr
      break
      ;;
  esac
done

# Display help if necessary
help() {
  echo "Usage: $(basename "$0") [options]"
  echo "  -h, --help                  print this message and exit"
  echo
  echo "Report bugs at https://github.com/alyssais/humans/issues"
  exit
}

[ "$show_help" = "stdin" ] && help
[ "$show_help" = "stderr" ] && >&2 help

# Declare config variables in case config.sh doesn't
owner=
repo=
file=
name=
email=
message=

# Read existing configuration if it exists
(source config.sh 2> /dev/null) || true

while :; do
  printf "GitHub repository owner: "
  test -n "$owner" && printf "($owner) "
  read i_owner
  test -n "$i_owner" && owner="$i_owner"
  test -n "$owner" && break
done

while :; do
  printf "GitHub repository name: "
  test -n "$repo" && printf "($repo) "
  read i_repo
  test -n "$i_repo" && repo="$i_repo"
  test -n "$repo" && break
done

test -z "$file" && file=CONTRIBUTORS
printf "Contributors file path: ($file) "
read i_file
test -n "$i_file" && file="$i_file"

test -z "$name" && name="A Friendly Bot"
printf "Bot name: ($name) "
read i_name
test -n "$i_name" && name="$i_name"

test -z "$email" &&
  email="$(echo "$name" | sed "s/ /./g" | tr '[:upper:]' '[:lower:]')@example"
printf "Bot email: ($email) "
read i_email
test -n "$i_email" && email="$i_email"

test -z "$message" && message="Update $file"
printf "Commit message: ($message) "
read i_message
test -n "$i_message" && message="$i_message"

printf "owner=%q\n"   "$owner"    > config.sh
printf "repo=%q\n"    "$repo"    >> config.sh
printf "file=%q\n"    "$file"    >> config.sh
printf "name=%q\n"    "$name"    >> config.sh
printf "email=%q\n"   "$email"   >> config.sh
printf "message=%q\n" "$message" >> config.sh

echo "Successfully wrote configuration to config.sh"
